{"version":3,"sources":["components/Nav.js","services/AuthService.js","apiConfig.js","components/authForm.js/SigninForm.js","components/authForm.js/SignupForm.js","components/authForm.js/ChangePasswordForm.js","components/Home.js","components/Profile.js","components/one_product.js","components/authForm.js/Post.js","components/authForm.js/Put.js","App.js","serviceWorker.js","index.js"],"names":["Nav","_ref","user","changeActivePage","onSignout","react_default","a","createElement","className","src","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Fragment","onClick","alwaysOptions","authenticatedOptions","unauthenticatedOptions","setUser","localStorage","setItem","JSON","stringify","delete_cookie","name","document","cookie","getUser","getItem","parse","apiUrls","apiUrl","window","location","hostname","SigninForm","state","formData","email","password","err","handleLoginRequest","url","concat","console","log","fetch","method","headers","Content-type","body","then","res","json","data","status","_this","setState","message","props","onSignin","catch","e","handleSubmit","preventDefault","handleChange","currentTarget","Object","objectSpread","value","class","this","onSubmit","placeholder","onChange","Component","SignupForm","password_confirmation","credentials","ChangePasswordForm","old","new","passwords","Content-Type","pStyle","width","height","borderStyle","border","background","Home","products","allProducts","productName","filter","product","includes","handelProductRequest","_this2","style","map","index","changeActiveProduct","image","alt","key","close_bid","Biddings","bid_number","Profile","OneProduct","bid","counter","handleProductRequest","handleBidRequest","Swal","fire","position","title","showConfirmButton","timer","countDownDate","date","Date","createdAt","setDate","getDate","counterInterval","setInterval","now","getTime","distance","Math","floor","clearInterval","_this3","defineProperty","owner_id","description","test","color","Post","Put","App","activePage","activeProduct","productId","undefined","removeItem","containerClass","_this$state","bgBack","components_Nav","components_Home","authForm_js_SigninForm","authForm_js_SignupForm","authForm_js_ChangePasswordForm","components_Profile","one_product","authForm_js_Post","authForm_js_Put","Boolean","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e17a487a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst authenticatedOptions = (changeActivePage, onSignout) => (\n  <React.Fragment>\n    <li\n      className=\"nav-item\"\n      onClick={() => changeActivePage(\"change-password\")}\n    >\n      <div className=\"nav-link\">Change Password</div>\n    </li>\n    <li className=\"nav-item\" onClick={() => changeActivePage(\"post\")}>\n      <div className=\"nav-link\">Add post</div>\n    </li>\n   \n    <li className=\"nav-item\" onClick={() => onSignout()}>\n      <div className=\"nav-link\">Sign Out</div>\n    </li>\n  \n  </React.Fragment>\n);\n\nconst unauthenticatedOptions = changeActivePage => (\n  <React.Fragment>\n    <li className=\"nav-item\" onClick={() => changeActivePage(\"sign-in\")}>\n      <div className=\"nav-link\">Sign In</div>\n    </li>\n    <li className=\"nav-item\" onClick={() => changeActivePage(\"sign-up\")}>\n      <div className=\"nav-link\">Sign Up</div>\n    </li>\n   \n  </React.Fragment>\n);\n\nconst alwaysOptions = changeActivePage => (\n  <React.Fragment>\n    <li className=\"nav-item\" onClick={() => changeActivePage(\"home\")}>\n      <div className=\"nav-link\">Home</div>\n    </li>\n   \n  </React.Fragment>\n);\n\nconst Nav = ({ user, changeActivePage, onSignout }) => (\n  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div className=\"navbar-brand\"><img className=\"width_logo\" src=\"https://f.top4top.net/p_1188oyaa71.png\"/></div>\n    <button\n      className=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarNav\"\n      aria-controls=\"navbarNav\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span className=\"navbar-toggler-icon\" />\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul className=\"navbar-nav\">\n        {alwaysOptions(changeActivePage)}\n\n        {user\n          ? authenticatedOptions(changeActivePage, onSignout)\n          : unauthenticatedOptions(changeActivePage)}\n        {/* {user && (\n          <li className=\"nav-item\">\n            <div className=\"nav-link\"> Hola, {user.email.split(\"@\")[0]}</div>\n          </li>\n        )} */}\n      </ul>\n    </div>\n  </nav>\n);\n\nexport default Nav;\n","export function setUser(user) {\n  localStorage.setItem(\"user\", JSON.stringify(user));\n}\n\nconst delete_cookie = function(name) {\n  document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n};\n\nexport function getUser() {\n  const user = localStorage.getItem(\"user\");\n  return user === \"undefined\" ? null : JSON.parse(user);\n}\n\nexport function Signout() {\n  document.cookie = \"jwt= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n  delete_cookie(\"jwt\");\n  localStorage.removeItem(\"user\");\n}\n","let apiUrl;\nconst apiUrls = {\n  production: \"https://sheltered-ridge-83464.herokuapp.com\",\n  development: \"http://localhost:3001\"\n};\n\nif (window.location.hostname === \"localhost\") {\n  apiUrl = apiUrls.development;\n} else {\n  apiUrl = apiUrls.production;\n}\n\nexport default apiUrl;\n","import React, { Component } from \"react\";\nimport apiUrl from \"../../apiConfig\";\nimport { setUser } from \"../../services/AuthService\";\n\n\n\n\nclass SigninForm extends Component {\n  state = {\n    formData: {\n      email: null,\n      password: null\n    },\n    err: null\n  };\n\n  handleLoginRequest = user => {\n    let url = `${apiUrl}/sign-in`;\n\n    console.log(url);\n    fetch(url, {\n      // mode: \"cors\",\n      // credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status > 200) this.setState({ err: data.message });\n        \n        else {\n          this.setState({ err: null });\n          setUser(data);\n          this.props.onSignin();\n        }\n      })\n      .catch(e => console.log(e));\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleLoginRequest(this.state.formData);\n  };\n\n  handleChange = ({ currentTarget }) => {\n    const formData = { ...this.state.formData };\n    formData[currentTarget.name] = currentTarget.value;\n    this.setState({ formData });\n  };\n\n  render() {\n    return (\n      <div className=\"Login-component\">\n       <div className=\"pt-5 mt-5\">\n       <div class=\"mainbox col-md-5 col-md-offset-3 col-sm-8 col-sm-offset-2 text-center margin\">    \n       <div class=\"box\">   \n\n        <h1>PLEASE SIGININ</h1>\n        <br/>\n        <br/>\n        {this.state.err ? (\n          <div className=\"alert alert-danger\"> {this.state.err} </div>\n        ) : (\n          \"\"\n        )}\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            \n        \n            <input\n              name=\"email\"\n              className=\"form-control\"\n              placeholder=\"Email address\"\n              onChange={this.handleChange}\n            />\n\n            <br/>\n           \n            \n            <input\n              name=\"password\"\n              className=\"form-control\"\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n            />\n           </div>\n          \n           <br/>\n        \n          <button type=\"submit\" className=\"btn btn-primary col-md-12\">\n            Login\n          </button>\n\n        </form>\n        <br/>\n        </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default SigninForm;\n","import React, { Component } from \"react\";\nimport apiUrl from \"../../apiConfig\";\nimport { setUser } from \"../../services/AuthService\";\nclass SignupForm extends Component {\n  state = {\n    formData: {\n      email: null,\n      password: null,\n      password_confirmation: null\n    },\n    err: null\n  };\n\n  handleLoginRequest = user => {\n    let url = `${apiUrl}/sign-up`;\n\n    fetch(url, {\n      // mode: \"cors\",\n      // credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({ credentials: user })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status > 299) \n          this.setState({ err: data.message});\n        else {\n          setUser(data);\n          this.props.onSignin();\n        }\n      })\n      .catch(e => console.log(e));\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleLoginRequest(this.state.formData);\n  };\n\n  handleChange = ({ currentTarget }) => {\n    const formData = { ...this.state.formData };\n    formData[currentTarget.name] = currentTarget.value;\n    this.setState({ formData });\n  };\n\n  render() {\n    return (\n      <div className=\"Login-component\">\n       <div className=\"pt-5 mt-5\">\n       <div class=\"mainbox col-md-5 col-md-offset-3 col-sm-8 col-sm-offset-2 text-center margin\">    \n       <div class=\"box\">   \n        <h1>PLEASE SIGNUP</h1>\n        {this.state.err ? (\n          <div className=\"alert alert-warning\"> {this.state.err} </div>\n        ) : (\n          \"\"\n        )}\n        <form onSubmit={this.handleSubmit}>\n        <br/>  <br/>\n          <div className=\"form-group\">\n            \n            <input\n              name=\"email\"\n              className=\"form-control\"\n              placeholder=\"Email address\"\n              onChange={this.handleChange}\n            />\n            <br/>\n            <input\n              name=\"password\"\n              className=\"form-control\"\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n            />\n           <br/>\n            \n            <input\n              name=\"password_confirmation\"\n              className=\"form-control\"\n              type=\"password\"\n              placeholder=\"Password confirmation\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <br/>\n\n          <button type=\"submit\" className=\"btn btn-primary col-md-12\">\n             Sign Up\n          </button>\n        </form>\n      </div>\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default SignupForm;","import React, { Component } from \"react\";\nimport apiUrl from \"../../apiConfig\";\nimport { getUser } from \"../../services/AuthService\";\nclass ChangePasswordForm extends Component {\n  state = {\n    formData: {\n      old: null,\n      new: null\n    },\n    err: null\n  };\n\n  handleLoginRequest = passwords => {\n    let url = `${apiUrl}/change-password`;\n\n    console.log({ email: getUser().email, passwords });\n    console.log(url);\n    fetch(url, {\n      method: \"PATCH\",\n      // mode: \"cors\",\n      // credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ email: getUser().email, passwords })\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.props.changeActivePage(\"home\");\n      })\n      .catch(e => console.log(e));\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleLoginRequest(this.state.formData);\n  };\n\n  handleChange = ({ currentTarget }) => {\n    const formData = { ...this.state.formData };\n    formData[currentTarget.name] = currentTarget.value;\n    this.setState({ formData });\n  };\n\n  render() {\n    return (\n      <div className=\"pt-5 mt-5\">\n      <div class=\"mainbox col-md-5 col-md-offset-3 col-sm-8 col-sm-offset-2 text-center margin\">    \n      <div class=\"box\">   \n        <h1>Change Password</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <br/>\n            <input\n              name=\"old\"\n              className=\"form-control\"\n              type=\"password\"\n              placeholder=\"old Password\"\n              onChange={this.handleChange}\n            />\n            <br/>\n            <input\n              name=\"new\"\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"new Password\"\n              onChange={this.handleChange}\n            />\n          </div>\n            <br/>\n          <button type=\"submit\" className=\"btn btn-primary col-md-12\">\n            Submit\n          </button>\n        </form>\n      </div>\n      </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default ChangePasswordForm;\n","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\n\nconst pStyle = {\n  width: '19rem',\n  height: '28rem'\n};\n\n\nconst borderStyle = {\n  border : '2px blue solid',\n  height: '50px'\n  \n\n}\n\n\nconst background = {\n  background: '#e8e8e8'\n  \n\n}\n\n\n\n\nclass Home extends Component {\n  state = {\n    products: [],\n    allProducts: [],\n    formData: {\n      productName : null\n    }\n\n    \n  };\n  handleChange = ({ currentTarget }) => {\n    const formData = { ...this.state.formData };\n    formData[currentTarget.name] = currentTarget.value;\n    const products = this.state.allProducts.filter(product => product.name.includes(currentTarget.value))\n    this.setState({formData, products});\n  };\n\n  handelProductRequest = () => {\n    let url = `${apiUrl}/api/products`;\n  \n    console.log(url);\n    fetch(url, {\n      // mode: \"cors\",\n      // credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    })\n\n      .then(res => res.json())\n      .then(data => {\n        if (data.status > 299) this.setState({ err: data.message });\n        else {\n          this.setState({ products: data.products, allProducts: data.products });\n        }\n      })\n      .catch(e => console.log(e));\n\n  }\n\n  componentDidMount() {\n\n    this.handelProductRequest()\n      \n  }\n      \n\n  render() {\n    return (\n      <div style={background} >\n       \n        <div className=\"bg_home\">\n            <input \n                style = {borderStyle}\n                name=\"productName\"\n                className=\"form-control test\"\n              \n                placeholder= \" 🔍  Search by item name\"\n                onChange={this.handleChange}\n              />\n              </div>\n        <div class=\"row pt-2 m-5 test2\">\n            \n            \n        \n\n          {this.state.products.map((product, index) => (\n          \n            <div class=\"col-sm p-2 animated slideInUp\">\n              <div class=\"card mt-3\"  style={pStyle} onClick={() => this.props.changeActiveProduct(product)}>\n                <img src={product.image} class=\"card-img-top\" alt=\"...\"/>\n                <div class=\"card-body\">\n                  <p key={index+' name'}  > <b> {product.name} </b></p> \n                      \n                  <p key={index+' description'}> Start bid: {product.close_bid} SR</p>\n\n                    { product.Biddings[0] ? (\n                      <p key={index+' Biddings'}> Highest bidding: <span className=\"highest_bid_span\">{ product.Biddings[0].bid_number} SR</span> </p>) :\"Start bidding now\"\n                    }\n                    \n\n              \n                  {/* <button key={index+' button'} onClick={() => this.props.changeActivePage('put', product.id)}>Edit</button> */}\n               \n              </div>\n            </div>\n          </div>\n          \n        ))}\n\n\n    \n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nconst Profile = () => <div>Profile</div>;\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport { getUser } from \"../services/AuthService\";\nimport Swal from \"sweetalert2\";\n\nclass OneProduct extends Component {\n  state = {\n    products: [],\n    formData: {\n      bid: 100\n    },\n    counter: null\n  };\n  componentDidMount() {\n    let url = `${apiUrl}/api/product/${this.props.product.id}`;\n\n    console.log(url);\n    fetch(url, {\n      // mode: \"cors\",\n      // credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status > 299) this.setState({ err: data.message });\n        else {\n          console.log(data.product);\n          this.setState({ products: data.product });\n        }\n      })\n      .catch(e => console.log(e));\n  }\n\n  handleProductRequest = product => {\n    console.log(\"product\\n\\n\\n\", product);\n    let url = `${apiUrl}/api/products/${this.props.product.id}`;\n\n    fetch(url, {\n      // mode: \"cors\",\n      // credentials: \"include\",\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({ product: product })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status > 299) this.setState({ err: data.message });\n        this.props.changeActivePage(\"home\");\n      })\n      .catch(e => console.log(e));\n  };\n\n  handleBidRequest = product => {\n    // console.log(\"product\\n\\n\\n\" , this.props.product.id , this.state.formData.bid , getUser().id)\n    // let url = `${apiUrl}/api/products/${this.props.product.id}/bid`;\n    let url = apiUrl + \"/api/products/\" + this.props.product.id + \"/bid\";\n    fetch(url, {\n      // mode: \"cors\",\n      // credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({ bid: this.state.formData.bid })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status > 299) this.setState({ err: data.message });\n\n        Swal.fire({\n          position: \"center\",\n          type: \"success\",\n          title: \"You added bid successfully\",\n          showConfirmButton: false,\n          timer: 2000\n        });\n\n        console.log(data);\n\n        // this.props.changeActivePage('home')\n      })\n      .catch(e => console.log(e));\n  };\n\n  handleChange = ({ currentTarget }) => {\n    const formData = { ...this.state.formData };\n    formData[currentTarget.name] = currentTarget.value;\n    this.setState({ formData });\n  };\n\n  countDownDate = () => {\n    var date = new Date(this.props.product.createdAt);\n\n    // add a day\n    return date.setDate(date.getDate() + 1);\n  };\n\n  counterInterval = setInterval(() => {\n    // Get todays date and time\n    const now = new Date().getTime();\n\n    // Find the distance between now and the count down date\n    const distance = this.countDownDate() - now;\n\n    // Time calculations for days, hours, minutes and seconds\n    const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n    const hours = Math.floor(\n      (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n    );\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n    // Output the result in an element with id=\"demo\"\n    let counter = days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \";\n    this.setState({ counter });\n\n    // If the count down is over, write some text\n    if (distance < 0) {\n      clearInterval(this.counterInterval);\n      counter = null;\n\n      this.setState({ counter });\n    }\n  }, 1000);\n\n  componentWillUnmount() {\n    clearInterval(this.counterInterval);\n  }\n  render() {\n    console.log(this.props.product);\n    return (\n      <div className=\"one111\" className=\"pt-5 mt-5\">\n        <div className=\"btns-one-product\">\n          {getUser() !== null &&\n          getUser().id === this.props.product.owner_id ? (\n            <React.Fragment>\n              {\" \"}\n              \n              <button\n                class=\"btn btn-secondary\"\n                onClick={() =>\n                  this.props.changeActivePage(\"put\", this.props.product.id)\n                }\n              >\n                Edit\n              </button>{\" \"}\n              &ensp;\n              <button\n                class=\"btn btn-warning\"\n                // className=\"btn-del-one-product\"\n                onClick={() => {\n                  this.handleProductRequest();\n                }}\n              >\n                Delete\n              </button>{\" \"}\n              \n            </React.Fragment>\n          ) : (\n            \"\"\n          )}\n        </div>\n\n        {/*Image */}\n        <img className=\"image-one-product\" src={this.state.products.image} />\n\n        <div class=\"clearfix\">\n          <div className=\"box1\">\n            {/* Name */}\n            <h1 className=\"name-one-product\">{this.state.products.name}</h1>\n            {/* starting bid */}\n            <h3 className=\"HSB-one-product\">Start Bid : </h3> &ensp;\n            <p className=\"P-one-product\">{this.state.products.close_bid} SR</p>\n            <br />\n            <br />\n            {/* text feild bid and its message */}\n            <div className=\"btn-bid-one-product\">\n              {getUser() && getUser().id !== this.props.product.owner_id ? (\n                this.state.counter ? (\n                  <React.Fragment>\n                    {\" \"}\n                    <p className=\"counter-one-product\">\n                      {this.state.counter}\n                    </p>{\" \"}\n                    <p className=\"until\">Until The Ends</p>\n                    <br />\n                    <h6 className=\"bidNow-one-product\">Bid : </h6> &ensp;\n                    <input\n                      className=\"input-bid-one-product\"\n                      type=\"number\"\n                      name=\"bid\"\n                      onChange={this.handleChange}\n                      value={this.state.formData.bid}\n                    />{\" \"}\n                    &ensp;\n                    {/* <br /> */}\n                    <button\n                      onClick={() => {\n                        this.handleBidRequest();\n                      }}\n                      class=\"btn btn-primary\"\n                    >\n                      BID\n                    </button>{\" \"}\n                  </React.Fragment>\n                ) : (\n                  <div>\n                    <img\n                      className=\"img-info\"\n                      src=\"https://vignette.wikia.nocookie.net/bestbrute/images/a/a1/Info_icon_blue_3d.svg/revision/latest?cb=20090524024510\"\n                    />\n                    <p class=\"text-info\">You Missed The Bid</p>{\" \"}\n                  </div>\n                )\n              ) : (\n                <div>\n                  <img\n                    className=\"img-info\"\n                    src=\"https://vignette.wikia.nocookie.net/bestbrute/images/a/a1/Info_icon_blue_3d.svg/revision/latest?cb=20090524024510\"\n                  />\n                  <p class=\"text-info\"> You Can not Bid </p>\n                </div>\n              )}\n            </div>{\" \"}\n            <br />\n            {this.props.product.Biddings[0] ? (\n              <h6> Highest Bid: {this.props.product.Biddings[0].bid_number}</h6>\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <div className=\"box1\">\n            {/* Description */}\n            <p className=\"desc-one-product\">\n              {this.state.products.description}\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default OneProduct;","import React, { Component } from \"react\";\nimport { getUser } from \"../../services/AuthService\";\n\nimport apiUrl from \"../../apiConfig\";\n\nconst test = {\n  background: 'purple',\n  color:'white',\n  \n  \n}\n\n\n\n\nclass Post extends Component {\n    state = {\n        formData: {\n            name: '',\n            description: '',\n            image: '',\n            owner_id: getUser().id ,\n            close_bid:''\n\n          }\n        }\n\n handleProductRequest = product => {\n    let url = `${apiUrl}/api/products`;\n\n    fetch(url, {\n      // mode: \"cors\",\n      // credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({ product: product })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status > 299) \n          this.setState({ err: data.message});\n          this.props.changeActivePage('home')\n      })\n      .catch(e => console.log(e));\n  };\n\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state.formData)\n    this.handleProductRequest(this.state.formData);\n     \n    \n    \n \n  };\n\n\n  handleChange = ({ currentTarget }) => {\n    const formData = { ...this.state.formData };\n    formData[currentTarget.name] = currentTarget.value;\n    this.setState({ formData });\n  };\n\n  render() {\n    return (\n      <div className=\"pt-5 mt-5\">\n       <div className=\"border_addPost\">\n        <h1 className=\"bg_title\">Add your item</h1>\n        <br/>\n        <div className=\"padding_AddPost\">\n        \n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>Name: </label>\n            <input\n              name=\"name\"\n              placeholder= \" type item name\"\n              className=\"form-control margin-top\"\n              onChange={this.handleChange}\n            />\n            <label>description:</label>\n            <input\n              name=\"description\"\n              placeholder= \" type item description\"\n              className=\"form-control margin-top\"\n              onChange={this.handleChange}\n            />\n\n            <label>image:</label>\n            <input\n              name=\"image\"\n              placeholder= \"type url example : https:image.com/old_pen\"\n              className=\"form-control margin-top\"\n              onChange={this.handleChange}\n            />\n\n            <label>start bid:</label>\n            <input\n              name=\"close_bid\"\n              className=\"form-control\"\n              placeholder= \" example : 100 \"\n              onChange={this.handleChange}\n              type=\"number\"\n            />\n          </div>\n          <br/>\n\n          <button type=\"submit\" className=\"btn btn-outline-primary col-md-12\" style={test}>\n            <span className=\"text.AddPost\">submit</span>\n          </button>\n        </form>\n        </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Post;","import React, { Component } from \"react\";\nimport { getUser } from \"../../services/AuthService\";\nimport apiUrl from \"../../apiConfig\";\n\n\nconst test = {\n  background: 'purple',\n  color:'white',\n  \n  \n}\n\nclass Put extends Component {\n    state = {\n        formData: {\n            name: '',\n            description: '',\n            image: '',\n            owner_id:  getUser().id,\n            close_bid:''\n\n          }\n        }\n\n\n        handleProductRequest = product => {\n            let url = `${apiUrl}/api/product/${this.props.id}`;\n        \n            fetch(url, {\n              // mode: \"cors\",\n              // credentials: \"include\",\n              method: \"PUT\",\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({ product: product })\n            })\n              .then(res => res.json())\n              .then(data => {\n                if (data.status > 299) \n                  this.setState({ err: data.message});\n                  this.props.changeActivePage('home')\n              })\n              .catch(e => console.log(e));\n          };\n        \n        \n          handleSubmit = e => {\n            e.preventDefault();\n            console.log(this.state.formData)\n            this.handleProductRequest(this.state.formData);\n             \n            \n            \n         \n          };\n        \n        \n          handleChange = ({ currentTarget }) => {\n            const formData = { ...this.state.formData };\n            formData[currentTarget.name] = currentTarget.value;\n            this.setState({ formData });\n          };\n        \n          render() {\n            return (\n              <div className=\"pt-5 mt-5\">\n                <div className=\"border_addPost\">\n                  <h1 className=\"bg_title\">Update your item</h1>\n                  <br/>\n                  <div className=\"padding_AddPost\">\n                \n                \n                <form onSubmit={this.handleSubmit}>\n                  <div className=\"form-group\">\n        \n                    <label>Name </label>\n                    <input\n                      name=\"name\"\n                      className=\"form-control margin-top\"\n                      placeholder= \" type item name\"\n                      onChange={this.handleChange}\n                    />\n                    <label>description</label>\n                    <input\n                      name=\"description\"\n                      className=\"form-control margin-top\"\n                      placeholder= \" type item description\"\n                      onChange={this.handleChange}\n                    />\n        \n                    <label>image</label>\n                    <input\n                      name=\"image\"\n                      className=\"form-control margin-top\"\n                      placeholder= \"type url example : https:image.com/old_pen\"\n                      onChange={this.handleChange}\n                    />\n        \n        \n        \n                    <label>close_bid</label>\n                    <input\n                      name=\"close_bid\"\n                      className=\"form-control margin-top\"\n                      onChange={this.handleChange}\n                      placeholder= \" example : 100 \"\n                      type=\"number\"\n                    />\n                  </div>\n                  <br/>\n                  <button type=\"submit\" className=\"btn btn-primary col-12\" style={test}>\n                    submit\n                  </button>\n                </form>\n              </div>\n              </div>\n              </div>\n            );\n          }\n        }\n        \n        export default Put;","import React, { Component } from \"react\";\nimport Nav from \"./components/Nav\";\nimport \"./App.css\";\nimport { getUser, Signout } from \"./services/AuthService\";\nimport SigninForm from \"./components/authForm.js/SigninForm\";\nimport SignupForm from \"./components/authForm.js/SignupForm\";\nimport ChangePasswordForm from \"./components/authForm.js/ChangePasswordForm\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport OneProduct from \"./components/one_product\";\nimport Post from \"./components/authForm.js/Post\";\nimport Put from \"./components/authForm.js/Put\";\n\nclass App extends Component {\n  state = {\n    user: null,\n    activePage: \"home\",\n    activeProduct: null,\n    productId: undefined\n  };\n  componentDidMount() {\n    // check if we have a token in the local storage\n    const user = getUser();\n    if (user) {\n      this.setState({ user });\n    }\n  }\n\n  changeActiveProduct = activeProduct => {\n    console.log(\"changing active product\", activeProduct);\n    this.setState({ activeProduct });\n    this.changeActivePage(\"one_product\");\n  };\n\n  changeActivePage = (activePage, productId) => {\n    this.setState({ \n      activePage: activePage,\n      productId: productId \n    });\n  };\n  onSignin = () => {\n    this.setState({ user: getUser() });\n    this.changeActivePage(\"home\");\n  };\n  onSignout = () => {\n    console.log(\"sigin out\");\n    this.setState({ user: null });\n    Signout();\n  };\n  render() {\n    const { user, activePage } = this.state;\n    let bgBack = \"\";\n    if (activePage === \"sign-in\" || activePage === \"sign-up\" || activePage === \"change-password\" ){\n      bgBack = \"loginBG\";\n    }\n    let containerClass;\n    if (activePage === \"home\") {\n      containerClass = \"\"\n    } else {\n      containerClass = \"container\"\n    }\n    if (activePage === \"post\" || activePage === \"put\" ){\n      bgBack = \"AddPostBG\";\n    }\n    return (\n      <div className={bgBack} >\n        <Nav\n          user={user}\n          changeActivePage={this.changeActivePage}\n          onSignout={this.onSignout}\n        />\n\n        <div className={containerClass}>\n          {activePage === \"home\" ? (\n            <Home changeActiveProduct={this.changeActiveProduct} changeActivePage={this.changeActivePage} />\n          ) : (\n            \"\"\n          )}\n          {activePage === \"sign-in\" ? (\n            <SigninForm onSignin={this.onSignin} />\n          ) : (\n            \"\"\n          )}\n          {activePage === \"sign-up\" ?  ( \n            <SignupForm onSignin={this.onSignin} />\n          ) : (\n            \"\"\n          )}\n          {activePage === \"change-password\" ? (\n            <ChangePasswordForm changeActivePage={this.changeActivePage} />\n          ) : (\n            \"\"\n          )}\n          {activePage === \"profile\" ? <Profile /> : \"\"}\n          {activePage === \"one_product\" ? (\n            <OneProduct product={this.state.activeProduct} changeActivePage={this.changeActivePage} />\n          ) : (\n            \"\"\n          )}\n          {activePage === \"post\" ? <Post changeActivePage={this.changeActivePage}/> : \"\"}\n          {activePage === \"put\" ? <Put id={this.state.productId} changeActivePage={this.changeActivePage}/> : \"\"}\n        </div>\n\n       \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"../node_modules/jquery/dist/jquery\";\nimport \"../node_modules/popper.js/dist/popper\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap\";\nimport \"../node_modules/animate.css/animate.css\"\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}